# config/environment.example.env
# ===================================
# CONFIGURAÇÕES DO AI SDR DALVONETE
# ===================================

# OpenAI Configuration
OPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
OPENAI_MODEL=gpt-4o
OPENAI_MAX_TOKENS=1000

# Google Cloud APIs
GOOGLE_VISION_API_KEY=AIzaSyXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
GOOGLE_PROJECT_ID=dalvonete-ai-project
GOOGLE_CREDENTIALS_PATH=/path/to/service-account-key.json

# Z-API WhatsApp Configuration
ZAPI_INSTANCE_ID=3E5F68ACE46F30605A0B2E6C7627E5AC
ZAPI_TOKEN=9F8363362C4A59C1CC7D5326
ZAPI_CLIENT_TOKEN=F6ebb1eaa3864462d97a9207743613045S
ZAPI_BASE_URL=https://api.z-api.io/instances

# CRM Configuration (Bubble.io)
CRM_API_URL=https://dalvonete.jaguarpartnes.com.br/api/1.1
CRM_API_TOKEN=45bad1dc1e69478a687386a98e591708
CRM_WORKSPACE_ID=1743361006470x605734445906919400

# Pipeline IDs
PIPELINE_EVENTO_ID=1743361186681x630044908701352000
PIPELINE_CHALE_ID=1743433031032x412519066807828500
ESTAGIO_EVENTO_ID=1743361024092x852597106951848000
ESTAGIO_CHALE_ID=1743433026190x861632770155741200

# Database Configuration
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=dalvonete_ai
POSTGRES_USER=n8n_user
POSTGRES_PASSWORD=sua_senha_super_segura

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=sua_senha_redis
REDIS_DB=0

# n8n Configuration
N8N_BASIC_AUTH_ACTIVE=true
N8N_BASIC_AUTH_USER=admin
N8N_BASIC_AUTH_PASSWORD=senha_admin_segura
N8N_ENCRYPTION_KEY=sua_chave_de_criptografia_de_32_caracteres
WEBHOOK_URL=https://seu-dominio.com
GENERIC_TIMEZONE=America/Sao_Paulo
N8N_DEFAULT_LOCALE=pt-BR

# Google Sheets Configuration
GOOGLE_SHEETS_TRAVA_ID=1tWZa2xifXSs-0-gK_1Jv87E1NJE3-ZfNcVjDokfYCSk
GOOGLE_SHEETS_TRAVA_NAME=PÃ¡gina1

# Google Calendar Configuration
GOOGLE_CALENDAR_CHALE_ID=6c56deec10e7d9a65bb9c73a393a480934803a1f531035f438fdae05b0d7b68f@group.calendar.google.com

# Video/Media URLs
VIDEO_CHALE_URL=https://jaguarpro.com.br/dalvonete/video.mp4
IMAGEM_CHALE_URL=https://jaguarpro.com.br/dalvonete/imagem

# MCP Server Configuration
MCP_SERVER_URL=https://n8n-n8n-start.hjmnzb.easypanel.host/mcp/mcpdalvnotes
MCP_PATH=mcpdalvnotes

# Assistant IDs (OpenAI)
ASSISTANT_ORGANIZA_INFO_ID=asst_sXd5fFWw0blR4ijGVV7ZuwRc
ASSISTANT_GERA_ARRAY_ID=asst_hnY4nWS9l0i0y1TgbGkxNjdg

# Rate Limiting
MESSAGE_BUFFER_TIME=25
MESSAGE_WAIT_TIME=70
LOOP_WAIT_TIME=2

# Backup Configuration
BACKUP_DIR=/backup/dalvonete
BACKUP_RETENTION_DAYS=7

# Monitoring
ALERT_EMAIL=admin@seu-dominio.com
LOG_LEVEL=info

# Security
ALLOWED_ORIGINS=https://seu-dominio.com
MAX_MESSAGE_SIZE=10MB
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=3600

---

# config/credentials.example.json
{
  "openai": {
    "name": "OpenAi account",
    "type": "openAiApi",
    "data": {
      "apiKey": "sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    }
  },
  "googleCalendar": {
    "name": "Google Calendar dalvonete", 
    "type": "googleCalendarOAuth2Api",
    "data": {
      "clientId": "your-google-client-id",
      "clientSecret": "your-google-client-secret",
      "accessToken": "generated-after-oauth",
      "refreshToken": "generated-after-oauth"
    }
  },
  "googleSheets": {
    "name": "Google Sheets dalvonete",
    "type": "googleSheetsOAuth2Api", 
    "data": {
      "clientId": "your-google-client-id",
      "clientSecret": "your-google-client-secret",
      "accessToken": "generated-after-oauth",
      "refreshToken": "generated-after-oauth"
    }
  },
  "postgres": {
    "name": "Postgres account",
    "type": "postgres",
    "data": {
      "host": "localhost",
      "database": "dalvonete_ai",
      "user": "n8n_user", 
      "password": "sua_senha_super_segura",
      "port": 5432
    }
  },
  "redis": {
    "name": "Redis account",
    "type": "redis",
    "data": {
      "host": "localhost",
      "port": 6379,
      "password": "sua_senha_redis",
      "database": 0
    }
  }
}

---

# docker-compose.yml
version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n_dalvonete
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=${POSTGRES_HOST}
      - DB_POSTGRESDB_PORT=${POSTGRES_PORT}
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_DEFAULT_LOCALE=${N8N_DEFAULT_LOCALE}
      - N8N_METRICS=true
      - N8N_LOG_LEVEL=info
    volumes:
      - n8n_data:/home/node/.n8n
      - ./backups:/backup
    depends_on:
      - postgres
      - redis
    networks:
      - dalvonete_network

  postgres:
    image: postgres:13
    container_name: postgres_dalvonete
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - dalvonete_network

  redis:
    image: redis:6-alpine
    container_name: redis_dalvonete
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - dalvonete_network

  nginx:
    image: nginx:alpine
    container_name: nginx_dalvonete
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - certbot_data:/var/www/certbot
    depends_on:
      - n8n
    networks:
      - dalvonete_network

volumes:
  n8n_data:
  postgres_data:
  redis_data:
  certbot_data:

networks:
  dalvonete_network:
    driver: bridge

---

# docker-compose.dev.yml  
version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n_dalvonete_dev
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=false
      - DB_TYPE=sqlite
      - N8N_ENCRYPTION_KEY=dev_encryption_key_32_characters
      - WEBHOOK_URL=http://localhost:5678
      - GENERIC_TIMEZONE=America/Sao_Paulo
      - N8N_DEFAULT_LOCALE=pt-BR
      - N8N_LOG_LEVEL=debug
    volumes:
      - n8n_dev_data:/home/node/.n8n
      - ./workflows:/workflows
    networks:
      - dalvonete_dev_network

  redis:
    image: redis:6-alpine
    container_name: redis_dalvonete_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - dalvonete_dev_network

volumes:
  n8n_dev_data:

networks:
  dalvonete_dev_network:
    driver: bridge

---

# nginx/nginx.conf
events {
    worker_connections 1024;
}

http {
    upstream n8n {
        server n8n:5678;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    server {
        listen 80;
        server_name _;
        
        # Certbot challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirect to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        server_name seu-dominio.com;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers on;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

        # Rate limiting for webhooks
        location /webhook/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://n8n;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeout settings
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # Main application
        location / {
            proxy_pass http://n8n;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }
}